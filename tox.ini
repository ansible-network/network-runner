[tox]
minversion = 1.4.2
envlist = py36,py37,func,linters
skipsdist = True

[testenv]
usedevelop = True
setenv =
   VIRTUAL_ENV={envdir}
   PYTHONWARNINGS=default::DeprecationWarning
   OS_STDOUT_CAPTURE=1
   OS_STDERR_CAPTURE=1
   OS_TEST_TIMEOUT=60
deps = -r{toxinidir}/test-requirements.txt
commands = python -m unittest discover network_runner/tests/unit --pattern=*.py

[testenv:func]
basepython = python3
commands = python tests/functional.py {posargs}

[testenv:linters]
basepython = python3
commands = flake8 {posargs}

[testenv:cover]
whitelist_externals = coverage
basepython = python3
setenv =
    VIRTUAL_ENV={envdir}
commands =
    coverage run --source network_runner -m unittest discover
    coverage html -d cover
    coverage xml -o cover/coverage.xml

[testenv:docs]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
       -r{toxinidir}/requirements.txt
commands = python setup.py build_sphinx

[testenv:releasenotes]
basepython = python3
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[flake8]
# E123, E125 skipped as they are invalid PEP-8.

show-source = True
# TODO(radez) research F821 and decide if it's safe to ignore long term
ignore = E123,E125,F821
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build
# [H106] Don't put vim configuration in source files.
# [H203] Use assertIs(Not)None to check for None.
# [H204] Use assert(Not)Equal to check for equality.
# [H205] Use assert(Greater|Less)(Equal) for comparison.
# [H904] Delay string interpolations at logging calls.
enable-extensions=H106,H203,H204,H205,H904
